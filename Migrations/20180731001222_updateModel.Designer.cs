// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.DataAccess;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AutoRepairContext))]
    [Migration("20180731001222_updateModel")]
    partial class updateModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Controllers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<int>("Phone");

                    b.Property<string>("State");

                    b.Property<int>("StatusId");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebApplication1.Controllers.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<string>("EngineSize");

                    b.Property<bool>("HasAbs");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<int>("NumberOfAxels");

                    b.Property<int>("NumberOfPassengers");

                    b.Property<int>("RideHigh");

                    b.Property<int>("VehicleTypeId");

                    b.Property<int>("Weight");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WebApplication1.Controllers.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adjuster");

                    b.Property<DateTime>("CompletedOn");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EstimatedCompletionDate");

                    b.Property<int?>("InsuranceId");

                    b.Property<string>("License");

                    b.Property<int>("MilageIn");

                    b.Property<int>("MilageOut");

                    b.Property<string>("OrderNumber");

                    b.Property<int>("StatusId");

                    b.Property<int>("VehicleId");

                    b.Property<string>("Vin");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("StatusId");

                    b.HasIndex("VehicleId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<int>("Phone");

                    b.Property<string>("State");

                    b.Property<int>("StatusId");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("Title");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplication1.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("Fax");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<int>("Phone");

                    b.Property<string>("State");

                    b.Property<int>("StatusId");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("WebApplication1.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("ContactName");

                    b.Property<int>("ContactPhone");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Identifier");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<int>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("Street1");

                    b.Property<string>("Street2");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Insurance");
                });

            modelBuilder.Entity("WebApplication1.Models.RepairGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("RepairGroups");
                });

            modelBuilder.Entity("WebApplication1.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Group");

                    b.Property<string>("Name");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("WebApplication1.Models.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsCdlRequired");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("WebApplication1.Models.WorkOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedOn");

                    b.Property<double>("Cost");

                    b.Property<DateTime>("Created");

                    b.Property<string>("Description");

                    b.Property<double>("EstimatedLabor");

                    b.Property<double>("EstimatedPaint");

                    b.Property<DateTime?>("LaborCompleted");

                    b.Property<DateTime?>("LaborStarted");

                    b.Property<int>("Quantity");

                    b.Property<DateTime?>("RefinishCompleted");

                    b.Property<DateTime?>("RefinishStarted");

                    b.Property<int>("RepairGroupId");

                    b.Property<int>("StatusId");

                    b.Property<string>("VendorIdentifier");

                    b.Property<int?>("WorkOrderId");

                    b.HasKey("Id");

                    b.HasIndex("RepairGroupId");

                    b.HasIndex("StatusId");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkOrderItems");
                });

            modelBuilder.Entity("WebApplication1.Controllers.Customer", b =>
                {
                    b.HasOne("WebApplication1.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Controllers.Vehicle", b =>
                {
                    b.HasOne("WebApplication1.Models.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Controllers.WorkOrder", b =>
                {
                    b.HasOne("WebApplication1.Controllers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId");

                    b.HasOne("WebApplication1.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Controllers.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.HasOne("WebApplication1.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.Facility", b =>
                {
                    b.HasOne("WebApplication1.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.WorkOrderItem", b =>
                {
                    b.HasOne("WebApplication1.Models.RepairGroup", "RepairGroup")
                        .WithMany()
                        .HasForeignKey("RepairGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Controllers.WorkOrder")
                        .WithMany("WorkOrderItems")
                        .HasForeignKey("WorkOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
