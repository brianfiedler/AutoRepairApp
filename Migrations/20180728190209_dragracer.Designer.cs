// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.DataAccess;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AutoRepairContext))]
    [Migration("20180728190209_dragracer")]
    partial class dragracer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Controllers.Automobile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<int>("NumberOfAxels");

                    b.Property<int>("NumberOfPassengers");

                    b.Property<int>("RideHigh");

                    b.Property<int>("Weight");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Automobiles");
                });

            modelBuilder.Entity("WebApplication1.Controllers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<int>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("Street");

                    b.Property<int>("Zip");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WebApplication1.Controllers.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("EngineSize");

                    b.Property<bool>("IsAHarley");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<int>("NumberOfAxels");

                    b.Property<int>("NumberOfPassengers");

                    b.Property<int>("Weight");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Motorcycles");
                });

            modelBuilder.Entity("WebApplication1.Controllers.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutomobileId");

                    b.Property<DateTime>("CompletedOn");

                    b.Property<DateTime>("Created");

                    b.Property<string>("CreatedBy");

                    b.Property<int>("CustomerId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EstimatedCompletionDate");

                    b.Property<int>("MotorcycleId");

                    b.Property<string>("OrderNumber");

                    b.HasKey("Id");

                    b.HasIndex("AutomobileId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MotorcycleId");

                    b.ToTable("WorkOrders");
                });

            modelBuilder.Entity("WebApplication1.Models.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<bool>("NeedsRefinish");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("WebApplication1.Models.Tuner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("HasAirbags");

                    b.Property<bool>("HasBodykit");

                    b.Property<bool>("HasSupercharger");

                    b.Property<bool>("Hasturbo");

                    b.Property<string>("PriorBuildShop");

                    b.Property<string>("RacingTeam");

                    b.HasKey("Id");

                    b.ToTable("Tuners");
                });

            modelBuilder.Entity("WebApplication1.Models.WorkOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedOn");

                    b.Property<double>("Cost");

                    b.Property<string>("Description");

                    b.Property<int?>("WorkOrderId");

                    b.HasKey("Id");

                    b.HasIndex("WorkOrderId");

                    b.ToTable("WorkOrderItem");
                });

            modelBuilder.Entity("WebApplication1.Controllers.WorkOrder", b =>
                {
                    b.HasOne("WebApplication1.Controllers.Automobile", "Automobile")
                        .WithMany()
                        .HasForeignKey("AutomobileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Controllers.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication1.Controllers.Motorcycle", "Motorcycle")
                        .WithMany()
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication1.Models.WorkOrderItem", b =>
                {
                    b.HasOne("WebApplication1.Controllers.WorkOrder")
                        .WithMany("WorkOrderItems")
                        .HasForeignKey("WorkOrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
